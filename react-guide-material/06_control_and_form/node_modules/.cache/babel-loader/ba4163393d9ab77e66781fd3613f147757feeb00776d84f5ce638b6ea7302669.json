{"ast":null,"code":"var _jsxFileName = \"/Users/nakanoshunsuke/Desktop/react-guide-material/06_control_and_form/src/010_list_components/end/Example.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst animals = [\"Dog\", \"Cat\", \"Rat\"];\nconst Example = () => {\n  // POINT for文でJSXの配列を作成\n  const animalList = [];\n  for (const animal of animals) {\n    animalList.push( /*#__PURE__*/_jsxDEV(\"li\", {\n      children: animal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }, this));\n  }\n\n  // POINT map関数でJSXの配列を作成\n  const helloAnimals = animals.map(animal => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Hello \", animal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u914D\\u5217\\u306E\\u64CD\\u4F5C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: animals.map(animal => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Hello, \", animal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["animals","Example","animalList","animal","push","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","helloAnimals","map","_Fragment","_c","$RefreshReg$"],"sources":["/Users/nakanoshunsuke/Desktop/react-guide-material/06_control_and_form/src/010_list_components/end/Example.js"],"sourcesContent":["\r\nconst animals = [\"Dog\", \"Cat\", \"Rat\"];\r\n\r\nconst Example = () => {\r\n  // POINT for文でJSXの配列を作成\r\n  const animalList = [];\r\n  for (const animal of animals) {\r\n    animalList.push(<li>{animal}</li>);\r\n  }\r\n\r\n  // POINT map関数でJSXの配列を作成\r\n  const helloAnimals = animals.map((animal) => {\r\n    return <li>Hello {animal}</li>;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h3>配列の操作</h3>\r\n      <ul>\r\n        {/* <li>{animals[0]}</li>\r\n        <li>{animals[1]}</li>\r\n        <li>{animals[2]}</li> */}\r\n        {/* {animalList}\r\n        {helloAnimals} */}\r\n        {/* POINT map関数はJSX内に記述可能 */}\r\n        {animals.map((animal) => <li>Hello, {animal}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":";;;AACA,MAAMA,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAErC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB;EACA,MAAMC,UAAU,GAAG,EAAE;EACrB,KAAK,MAAMC,MAAM,IAAIH,OAAO,EAAE;IAC5BE,UAAU,CAACE,IAAI,eAACC,OAAA;MAAAC,QAAA,EAAKH;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC;EACpC;;EAEA;EACA,MAAMC,YAAY,GAAGX,OAAO,CAACY,GAAG,CAAET,MAAM,IAAK;IAC3C,oBAAOE,OAAA;MAAAC,QAAA,GAAI,QAAM,EAACH,MAAM;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC,CAAC,CAAC;EAEF,oBACEL,OAAA,CAAAQ,SAAA;IAAAP,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdL,OAAA;MAAAC,QAAA,EAOGN,OAAO,CAACY,GAAG,CAAET,MAAM,iBAAKE,OAAA;QAAAC,QAAA,GAAI,SAAO,EAACH,MAAM;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAACI,EAAA,GA1BIb,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}