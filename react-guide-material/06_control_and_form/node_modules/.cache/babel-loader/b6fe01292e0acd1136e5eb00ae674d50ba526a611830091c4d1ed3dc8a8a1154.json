{"ast":null,"code":"var _jsxFileName = \"/Users/nakanoshunsuke/Desktop/react-guide-material/06_control_and_form/src/100_single_checkbox/end/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// POINT チェックボックスの実装\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [isChecked, setIsChecked] = useState(true);\n\n  // const toggleChecked = (e) => {\n  //   setIsChecked(prevState => !prevState);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"my-check\",\n      children: \"\\u30C1\\u30A7\\u30C3\\u30AF\\uFF1A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"my-check\",\n      checked: isChecked,\n      onChange: () => setIsChecked(prevState => !prevState)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isChecked ? \"ON!\" : \"OFF!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"q68eTZ62AYdTxuW0/uv+R2rihi4=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Example","_s","isChecked","setIsChecked","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","checked","onChange","prevState","_c","$RefreshReg$"],"sources":["/Users/nakanoshunsuke/Desktop/react-guide-material/06_control_and_form/src/100_single_checkbox/end/Example.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n// POINT チェックボックスの実装\r\nconst Example = () => {\r\n  const [isChecked, setIsChecked] = useState(true);\r\n\r\n  // const toggleChecked = (e) => {\r\n  //   setIsChecked(prevState => !prevState);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"my-check\">\r\n        チェック：\r\n      </label>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"my-check\"\r\n        checked={isChecked}\r\n        onChange={() => setIsChecked(prevState => !prevState)}\r\n      />\r\n      <div>{isChecked ? \"ON!\" : \"OFF!\"}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA;EACA;;EAEA,oBACEE,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAOM,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAE1B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRV,OAAA;MACEW,IAAI,EAAC,UAAU;MACfC,EAAE,EAAC,UAAU;MACbC,OAAO,EAAEV,SAAU;MACnBW,QAAQ,EAAEA,CAAA,KAAMV,YAAY,CAACW,SAAS,IAAI,CAACA,SAAS;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACFV,OAAA;MAAAK,QAAA,EAAMF,SAAS,GAAG,KAAK,GAAG;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACR,EAAA,CArBID,OAAO;AAAAe,EAAA,GAAPf,OAAO;AAuBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}